{"version":3,"sources":["../src/tools/explorer/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6BAA+B;AAC/B,yCAA2C;AAC3C,iEAA4D;AAC5D,6CAAwC;AAGxC,wEAAmE;AAEnE,6BAA+B;AAC/B,oCAAsC;AAEtC,6DAAgE;AAGhE,oBAAoB,EAAE,CAAC;AAEvB,CAAC,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;IACd,QAAQ,CAAC,MAAM,CAAC,oBAAC,QAAQ,OAAG,EAAE,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,CAAC;AACxE,CAAC,CAAC,CAAC;AAQH;IAA8B,4BAAmC;IAE7D;QAAA,YACI,iBAAO,SAcV;QAbG,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QACvC,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QAC/C,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QAC3C,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QAC/C,KAAI,CAAC,KAAK,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;QAEjD,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAA,UAAU;YACtC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBACb,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YAC7B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;YACtC,CAAC;QACL,CAAC,CAAC,CAAC;;IACP,CAAC;IAEM,yBAAM,GAAb;QAAA,iBAcC;QAbG,MAAM,CAAC,CACP,oBAAC,0BAAgB;YACb,oBAAC,gBAAM,IACH,KAAK,EAAC,iBAAiB,EACvB,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,EACpC,KAAK,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,IAE3C,IAAI,CAAC,KAAK,CAAC,OAAO;kBAClB,oBAAC,0BAAgB,IAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,CAAC,GAAI;kBAC5C,6BAAK,SAAS,EAAC,WAAW,EAAC,GAAG,EAAE,UAAA,OAAO,IAAI,OAAA,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAzB,CAAyB,sBAAuB,CACxF,CACM,CAClB,CAAC;IACN,CAAC;IAEO,0BAAO,GAAf,UAAgB,IAAS;QAAzB,iBAQC;QAPG,IAAI,KAAK,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAA,GAAG;YAChC,KAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;QAC3E,CAAC,CAAC;aACD,KAAK,CAAC,UAAA,GAAG;YACN,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YAC9B,KAAI,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACP,CAAC;IACO,8BAAW,GAAnB,UAAoB,OAAoB;QAAxC,iBAcC;QAbG,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,UAAU,EAAE,UAAA,GAAG;gBAC1C,GAAG,CAAC,eAAe,EAAE,CAAC;gBACtB,GAAG,CAAC,cAAc,EAAE,CAAC;gBACrB,GAAG,CAAC,YAAY,CAAC,UAAU,GAAG,MAAM,CAAC;YACzC,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,MAAM,EAAE,UAAA,GAAG;gBACtC,GAAG,CAAC,eAAe,EAAE,CAAC;gBACtB,GAAG,CAAC,cAAc,EAAE,CAAC;gBACrB,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAC3C,CAAC,CAAC,CAAC;QACP,CAAC;IACL,CAAC;IACO,4BAAS,GAAjB,UAAkB,KAAe;QAAjC,iBAQC;QAPG,IAAI,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QACjC,IAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAChC,MAAM,CAAC,MAAM,GAAG,UAAA,IAAI;YAChB,WAAW,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;YAC1C,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAChC,CAAC,CAAC;QACF,MAAM,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC;IACO,8BAAW,GAAnB;QACI,IAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;IACzC,CAAC;IACL,eAAC;AAAD,CAvEA,AAuEC,CAvE6B,KAAK,CAAC,SAAS,GAuE5C;AAvEY,4BAAQ","file":"tools/explorer/index.js","sourcesContent":["import * as JSZip from 'jszip';\r\nimport * as localforage from 'localforage';\r\nimport CircularProgress from 'material-ui/CircularProgress';\r\nimport Dialog from 'material-ui/Dialog';\r\nimport FlatButton from 'material-ui/FlatButton';\r\nimport RaisedButton from 'material-ui/RaisedButton';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport TextField from 'material-ui/TextField';\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\n\r\nimport injectTapEventPlugin = require('react-tap-event-plugin');\r\n// Needed for onTouchTap\r\n// http://stackoverflow.com/a/34015469/988941\r\ninjectTapEventPlugin();\r\n\r\n$(document).ready(() => {\r\n    ReactDOM.render(<Explorer />, document.getElementById('react-dom'));\r\n});\r\n\r\nexport interface IExplorerState {\r\n    resourceZip?: JSZip;\r\n    showDialog: boolean;\r\n    loading?: boolean;\r\n}\r\n\r\nexport class Explorer extends React.Component<{}, IExplorerState> {\r\n    private dropZone: HTMLElement;\r\n    constructor() {\r\n        super();\r\n        this.loadZip = this.loadZip.bind(this);\r\n        this.setDropZone = this.setDropZone.bind(this);\r\n        this.dropFiles = this.dropFiles.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.state = { showDialog: true, loading: true };\r\n\r\n        localforage.getItem('zip').then(cachedFile => {\r\n            if (cachedFile) {\r\n                this.loadZip(cachedFile);\r\n            } else {\r\n                this.setState({ loading: false });\r\n            }\r\n        });\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n        <MuiThemeProvider>\r\n            <Dialog\r\n                title=\"Select game ZIP\"\r\n                open={Boolean(this.state.showDialog)}\r\n                modal={true} onRequestClose={this.handleClose}\r\n            >\r\n                { this.state.loading\r\n                ? <CircularProgress size={80} thickness={5} />\r\n                : <div className=\"drop_zone\" ref={element => this.setDropZone(element)}>Drop files here</div>}\r\n            </Dialog>\r\n        </MuiThemeProvider>\r\n        );\r\n    }\r\n\r\n    private loadZip(data: any) {\r\n        new JSZip().loadAsync(data).then(zip => {\r\n            this.setState({ resourceZip: zip, loading: false, showDialog: false });\r\n        })\r\n        .catch(err => {\r\n            localforage.removeItem('zip');\r\n            this.setState({ loading: false });\r\n        });\r\n    }\r\n    private setDropZone(element: HTMLElement) {\r\n        this.dropZone = element;\r\n        if (this.dropZone) {\r\n            this.dropZone.addEventListener('dragover', evt => {\r\n                evt.stopPropagation();\r\n                evt.preventDefault();\r\n                evt.dataTransfer.dropEffect = 'copy';\r\n            });\r\n            this.dropZone.addEventListener('drop', evt => {\r\n                evt.stopPropagation();\r\n                evt.preventDefault();\r\n                this.dropFiles(evt.dataTransfer.files);\r\n            });\r\n        }\r\n    }\r\n    private dropFiles(files: FileList) {\r\n        this.setState({ loading: true });\r\n        const reader = new FileReader();\r\n        reader.onload = file => {\r\n            localforage.setItem('zip', reader.result);\r\n            this.loadZip(reader.result);\r\n        };\r\n        reader.readAsBinaryString(files.item(0));\r\n    }\r\n    private handleClose() {\r\n        this.setState({ showDialog: false });\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}