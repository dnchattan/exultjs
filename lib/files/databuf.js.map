{"version":3,"sources":["../src/files/databuf.ts"],"names":[],"mappings":";;AAoBA;IAEI,0BAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAC9B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IACpB,CAAC;IACM,+BAAI,GAAX,UAAY,GAAW;QACnB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;IACtB,CAAC;IACM,+BAAI,GAAX,UAAY,CAAS;QACjB,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC;IACrB,CAAC;IACD,sBAAW,iCAAG;aAAd;YACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;;;OAAA;IACD,sBAAW,kCAAI;aAAf;YACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;QAClC,CAAC;;;OAAA;IACD,sBAAW,iCAAG;aAAd;YACI,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;QAChD,CAAC;;;OAAA;IACM,+BAAI,GAAX;QACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC9C,CAAC;IACM,gCAAK,GAAZ;QACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;IAChD,CAAC;IACM,gCAAK,GAAZ;QACI,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACpD,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC;QACjB,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IACM,oCAAS,GAAhB;QACI,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACpD,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC;QACjB,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IACM,gCAAK,GAAZ;QACI,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACpD,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC;QACjB,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IACM,oCAAS,GAAhB;QACI,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACpD,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC;QACjB,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IACM,+BAAI,GAAX,UAAY,CAAS;QACjB,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;QAC/D,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IACM,qCAAU,GAAjB,UAAkB,IAAY;QAC1B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC;IAC3E,CAAC;IACL,uBAAC;AAAD,CArDA,AAqDC,IAAA;AArDY,4CAAgB","file":"files/databuf.js","sourcesContent":["import { Readable } from 'stream';\r\n\r\nexport interface IDataSource {\r\n    readonly size: number;\r\n    readonly pos: number;\r\n    readonly eof: boolean;\r\n\r\n    seek(pos: number): void;\r\n    skip(n: number): void;\r\n    peek(): number;\r\n\r\n    read1(): number;\r\n    read2(): number;\r\n    read2high(): number;\r\n    read4(): number;\r\n    read4high(): number;\r\n    read(size: number): Buffer;\r\n    readString(size: number): string;\r\n}\r\n\r\nexport class BufferDataSource implements IDataSource {\r\n    private cursor: number;\r\n    constructor(private buffer: Buffer) {\r\n        this.cursor = 0;\r\n    }\r\n    public seek(pos: number) {\r\n        this.cursor = pos;\r\n    }\r\n    public skip(n: number) {\r\n        this.cursor += n;\r\n    }\r\n    public get pos(): number {\r\n        return this.cursor;\r\n    }\r\n    public get size(): number {\r\n        return this.buffer.byteLength;\r\n    }\r\n    public get eof(): boolean {\r\n        return this.cursor > this.buffer.byteLength;\r\n    }\r\n    public peek(): number {\r\n        return this.buffer.readUInt8(this.cursor);\r\n    }\r\n    public read1(): number {\r\n        return this.buffer.readUInt8(this.cursor++);\r\n    }\r\n    public read2(): number {\r\n        const value = this.buffer.readUInt16LE(this.cursor);\r\n        this.cursor += 2;\r\n        return value;\r\n    }\r\n    public read2high(): number {\r\n        const value = this.buffer.readUInt16BE(this.cursor);\r\n        this.cursor += 2;\r\n        return value;\r\n    }\r\n    public read4(): number {\r\n        const value = this.buffer.readUInt32LE(this.cursor);\r\n        this.cursor += 4;\r\n        return value;\r\n    }\r\n    public read4high(): number {\r\n        const value = this.buffer.readUInt32BE(this.cursor);\r\n        this.cursor += 4;\r\n        return value;\r\n    }\r\n    public read(n: number): Buffer {\r\n        const value = this.buffer.slice(this.cursor, this.cursor += n);\r\n        return value;\r\n    }\r\n    public readString(size: number): string {\r\n        return this.buffer.toString('ascii', this.cursor, this.cursor += size);\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}